/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"
#import "TAsyncTransport.h"
#import "TProtocolFactory.h"
#import "TBaseClient.h"


typedef NSMutableArray * ProcessInfoList;

typedef NSMutableArray * HogsBugsList;

typedef NSMutableArray * FeatureList;

@interface Registration : NSObject <TBase, NSCoding> {
  NSString * __uuId;
  double __timestamp;
  NSString * __platformId;
  NSString * __systemVersion;
  NSString * __systemDistribution;
  NSString * __kernelVersion;

  BOOL __uuId_isset;
  BOOL __timestamp_isset;
  BOOL __platformId_isset;
  BOOL __systemVersion_isset;
  BOOL __systemDistribution_isset;
  BOOL __kernelVersion_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=uuId, setter=setUuId:) NSString * uuId;
@property (nonatomic, getter=timestamp, setter=setTimestamp:) double timestamp;
@property (nonatomic, retain, getter=platformId, setter=setPlatformId:) NSString * platformId;
@property (nonatomic, retain, getter=systemVersion, setter=setSystemVersion:) NSString * systemVersion;
@property (nonatomic, retain, getter=systemDistribution, setter=setSystemDistribution:) NSString * systemDistribution;
@property (nonatomic, retain, getter=kernelVersion, setter=setKernelVersion:) NSString * kernelVersion;
#endif

- (id) init;
- (id) initWithUuId: (NSString *) uuId timestamp: (double) timestamp platformId: (NSString *) platformId systemVersion: (NSString *) systemVersion systemDistribution: (NSString *) systemDistribution kernelVersion: (NSString *) kernelVersion;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) uuId;
- (void) setUuId: (NSString *) uuId;
#endif
- (BOOL) uuIdIsSet;

#if !__has_feature(objc_arc)
- (double) timestamp;
- (void) setTimestamp: (double) timestamp;
#endif
- (BOOL) timestampIsSet;

#if !__has_feature(objc_arc)
- (NSString *) platformId;
- (void) setPlatformId: (NSString *) platformId;
#endif
- (BOOL) platformIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) systemVersion;
- (void) setSystemVersion: (NSString *) systemVersion;
#endif
- (BOOL) systemVersionIsSet;

#if !__has_feature(objc_arc)
- (NSString *) systemDistribution;
- (void) setSystemDistribution: (NSString *) systemDistribution;
#endif
- (BOOL) systemDistributionIsSet;

#if !__has_feature(objc_arc)
- (NSString *) kernelVersion;
- (void) setKernelVersion: (NSString *) kernelVersion;
#endif
- (BOOL) kernelVersionIsSet;

@end

@interface ProcessInfo : NSObject <TBase, NSCoding> {
  int32_t __pId;
  NSString * __pName;
  NSString * __applicationLabel;
  BOOL __isSystemApp;
  NSString * __importance;
  NSString * __versionName;
  int32_t __versionCode;
  NSMutableArray * __appSignatures;
  NSString * __installationPkg;

  BOOL __pId_isset;
  BOOL __pName_isset;
  BOOL __applicationLabel_isset;
  BOOL __isSystemApp_isset;
  BOOL __importance_isset;
  BOOL __versionName_isset;
  BOOL __versionCode_isset;
  BOOL __appSignatures_isset;
  BOOL __installationPkg_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=pId, setter=setPId:) int32_t pId;
@property (nonatomic, retain, getter=pName, setter=setPName:) NSString * pName;
@property (nonatomic, retain, getter=applicationLabel, setter=setApplicationLabel:) NSString * applicationLabel;
@property (nonatomic, getter=isSystemApp, setter=setIsSystemApp:) BOOL isSystemApp;
@property (nonatomic, retain, getter=importance, setter=setImportance:) NSString * importance;
@property (nonatomic, retain, getter=versionName, setter=setVersionName:) NSString * versionName;
@property (nonatomic, getter=versionCode, setter=setVersionCode:) int32_t versionCode;
@property (nonatomic, retain, getter=appSignatures, setter=setAppSignatures:) NSMutableArray * appSignatures;
@property (nonatomic, retain, getter=installationPkg, setter=setInstallationPkg:) NSString * installationPkg;
#endif

- (id) init;
- (id) initWithPId: (int32_t) pId pName: (NSString *) pName applicationLabel: (NSString *) applicationLabel isSystemApp: (BOOL) isSystemApp importance: (NSString *) importance versionName: (NSString *) versionName versionCode: (int32_t) versionCode appSignatures: (NSMutableArray *) appSignatures installationPkg: (NSString *) installationPkg;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) pId;
- (void) setPId: (int32_t) pId;
#endif
- (BOOL) pIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) pName;
- (void) setPName: (NSString *) pName;
#endif
- (BOOL) pNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) applicationLabel;
- (void) setApplicationLabel: (NSString *) applicationLabel;
#endif
- (BOOL) applicationLabelIsSet;

#if !__has_feature(objc_arc)
- (BOOL) isSystemApp;
- (void) setIsSystemApp: (BOOL) isSystemApp;
#endif
- (BOOL) isSystemAppIsSet;

#if !__has_feature(objc_arc)
- (NSString *) importance;
- (void) setImportance: (NSString *) importance;
#endif
- (BOOL) importanceIsSet;

#if !__has_feature(objc_arc)
- (NSString *) versionName;
- (void) setVersionName: (NSString *) versionName;
#endif
- (BOOL) versionNameIsSet;

#if !__has_feature(objc_arc)
- (int32_t) versionCode;
- (void) setVersionCode: (int32_t) versionCode;
#endif
- (BOOL) versionCodeIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) appSignatures;
- (void) setAppSignatures: (NSMutableArray *) appSignatures;
#endif
- (BOOL) appSignaturesIsSet;

#if !__has_feature(objc_arc)
- (NSString *) installationPkg;
- (void) setInstallationPkg: (NSString *) installationPkg;
#endif
- (BOOL) installationPkgIsSet;

@end

@interface NetworkStatistics : NSObject <TBase, NSCoding> {
  double __wifiReceived;
  double __wifiSent;
  double __mobileReceived;
  double __mobileSent;

  BOOL __wifiReceived_isset;
  BOOL __wifiSent_isset;
  BOOL __mobileReceived_isset;
  BOOL __mobileSent_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=wifiReceived, setter=setWifiReceived:) double wifiReceived;
@property (nonatomic, getter=wifiSent, setter=setWifiSent:) double wifiSent;
@property (nonatomic, getter=mobileReceived, setter=setMobileReceived:) double mobileReceived;
@property (nonatomic, getter=mobileSent, setter=setMobileSent:) double mobileSent;
#endif

- (id) init;
- (id) initWithWifiReceived: (double) wifiReceived wifiSent: (double) wifiSent mobileReceived: (double) mobileReceived mobileSent: (double) mobileSent;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) wifiReceived;
- (void) setWifiReceived: (double) wifiReceived;
#endif
- (BOOL) wifiReceivedIsSet;

#if !__has_feature(objc_arc)
- (double) wifiSent;
- (void) setWifiSent: (double) wifiSent;
#endif
- (BOOL) wifiSentIsSet;

#if !__has_feature(objc_arc)
- (double) mobileReceived;
- (void) setMobileReceived: (double) mobileReceived;
#endif
- (BOOL) mobileReceivedIsSet;

#if !__has_feature(objc_arc)
- (double) mobileSent;
- (void) setMobileSent: (double) mobileSent;
#endif
- (BOOL) mobileSentIsSet;

@end

@interface NetworkDetails : NSObject <TBase, NSCoding> {
  NSString * __networkType;
  NSString * __mobileNetworkType;
  NSString * __mobileDataStatus;
  NSString * __mobileDataActivity;
  BOOL __roamingEnabled;
  NSString * __wifiStatus;
  int32_t __wifiSignalStrength;
  int32_t __wifiLinkSpeed;
  NetworkStatistics * __networkStatistics;

  BOOL __networkType_isset;
  BOOL __mobileNetworkType_isset;
  BOOL __mobileDataStatus_isset;
  BOOL __mobileDataActivity_isset;
  BOOL __roamingEnabled_isset;
  BOOL __wifiStatus_isset;
  BOOL __wifiSignalStrength_isset;
  BOOL __wifiLinkSpeed_isset;
  BOOL __networkStatistics_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=networkType, setter=setNetworkType:) NSString * networkType;
@property (nonatomic, retain, getter=mobileNetworkType, setter=setMobileNetworkType:) NSString * mobileNetworkType;
@property (nonatomic, retain, getter=mobileDataStatus, setter=setMobileDataStatus:) NSString * mobileDataStatus;
@property (nonatomic, retain, getter=mobileDataActivity, setter=setMobileDataActivity:) NSString * mobileDataActivity;
@property (nonatomic, getter=roamingEnabled, setter=setRoamingEnabled:) BOOL roamingEnabled;
@property (nonatomic, retain, getter=wifiStatus, setter=setWifiStatus:) NSString * wifiStatus;
@property (nonatomic, getter=wifiSignalStrength, setter=setWifiSignalStrength:) int32_t wifiSignalStrength;
@property (nonatomic, getter=wifiLinkSpeed, setter=setWifiLinkSpeed:) int32_t wifiLinkSpeed;
@property (nonatomic, retain, getter=networkStatistics, setter=setNetworkStatistics:) NetworkStatistics * networkStatistics;
#endif

- (id) init;
- (id) initWithNetworkType: (NSString *) networkType mobileNetworkType: (NSString *) mobileNetworkType mobileDataStatus: (NSString *) mobileDataStatus mobileDataActivity: (NSString *) mobileDataActivity roamingEnabled: (BOOL) roamingEnabled wifiStatus: (NSString *) wifiStatus wifiSignalStrength: (int32_t) wifiSignalStrength wifiLinkSpeed: (int32_t) wifiLinkSpeed networkStatistics: (NetworkStatistics *) networkStatistics;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) networkType;
- (void) setNetworkType: (NSString *) networkType;
#endif
- (BOOL) networkTypeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mobileNetworkType;
- (void) setMobileNetworkType: (NSString *) mobileNetworkType;
#endif
- (BOOL) mobileNetworkTypeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mobileDataStatus;
- (void) setMobileDataStatus: (NSString *) mobileDataStatus;
#endif
- (BOOL) mobileDataStatusIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mobileDataActivity;
- (void) setMobileDataActivity: (NSString *) mobileDataActivity;
#endif
- (BOOL) mobileDataActivityIsSet;

#if !__has_feature(objc_arc)
- (BOOL) roamingEnabled;
- (void) setRoamingEnabled: (BOOL) roamingEnabled;
#endif
- (BOOL) roamingEnabledIsSet;

#if !__has_feature(objc_arc)
- (NSString *) wifiStatus;
- (void) setWifiStatus: (NSString *) wifiStatus;
#endif
- (BOOL) wifiStatusIsSet;

#if !__has_feature(objc_arc)
- (int32_t) wifiSignalStrength;
- (void) setWifiSignalStrength: (int32_t) wifiSignalStrength;
#endif
- (BOOL) wifiSignalStrengthIsSet;

#if !__has_feature(objc_arc)
- (int32_t) wifiLinkSpeed;
- (void) setWifiLinkSpeed: (int32_t) wifiLinkSpeed;
#endif
- (BOOL) wifiLinkSpeedIsSet;

#if !__has_feature(objc_arc)
- (NetworkStatistics *) networkStatistics;
- (void) setNetworkStatistics: (NetworkStatistics *) networkStatistics;
#endif
- (BOOL) networkStatisticsIsSet;

@end

@interface BatteryDetails : NSObject <TBase, NSCoding> {
  NSString * __batteryCharger;
  NSString * __batteryHealth;
  double __batteryVoltage;
  double __batteryTemperature;
  NSString * __batteryTechnology;
  double __batteryCapacity;

  BOOL __batteryCharger_isset;
  BOOL __batteryHealth_isset;
  BOOL __batteryVoltage_isset;
  BOOL __batteryTemperature_isset;
  BOOL __batteryTechnology_isset;
  BOOL __batteryCapacity_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=batteryCharger, setter=setBatteryCharger:) NSString * batteryCharger;
@property (nonatomic, retain, getter=batteryHealth, setter=setBatteryHealth:) NSString * batteryHealth;
@property (nonatomic, getter=batteryVoltage, setter=setBatteryVoltage:) double batteryVoltage;
@property (nonatomic, getter=batteryTemperature, setter=setBatteryTemperature:) double batteryTemperature;
@property (nonatomic, retain, getter=batteryTechnology, setter=setBatteryTechnology:) NSString * batteryTechnology;
@property (nonatomic, getter=batteryCapacity, setter=setBatteryCapacity:) double batteryCapacity;
#endif

- (id) init;
- (id) initWithBatteryCharger: (NSString *) batteryCharger batteryHealth: (NSString *) batteryHealth batteryVoltage: (double) batteryVoltage batteryTemperature: (double) batteryTemperature batteryTechnology: (NSString *) batteryTechnology batteryCapacity: (double) batteryCapacity;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) batteryCharger;
- (void) setBatteryCharger: (NSString *) batteryCharger;
#endif
- (BOOL) batteryChargerIsSet;

#if !__has_feature(objc_arc)
- (NSString *) batteryHealth;
- (void) setBatteryHealth: (NSString *) batteryHealth;
#endif
- (BOOL) batteryHealthIsSet;

#if !__has_feature(objc_arc)
- (double) batteryVoltage;
- (void) setBatteryVoltage: (double) batteryVoltage;
#endif
- (BOOL) batteryVoltageIsSet;

#if !__has_feature(objc_arc)
- (double) batteryTemperature;
- (void) setBatteryTemperature: (double) batteryTemperature;
#endif
- (BOOL) batteryTemperatureIsSet;

#if !__has_feature(objc_arc)
- (NSString *) batteryTechnology;
- (void) setBatteryTechnology: (NSString *) batteryTechnology;
#endif
- (BOOL) batteryTechnologyIsSet;

#if !__has_feature(objc_arc)
- (double) batteryCapacity;
- (void) setBatteryCapacity: (double) batteryCapacity;
#endif
- (BOOL) batteryCapacityIsSet;

@end

@interface CpuStatus : NSObject <TBase, NSCoding> {
  double __cpuUsage;
  double __uptime;
  double __sleeptime;

  BOOL __cpuUsage_isset;
  BOOL __uptime_isset;
  BOOL __sleeptime_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=cpuUsage, setter=setCpuUsage:) double cpuUsage;
@property (nonatomic, getter=uptime, setter=setUptime:) double uptime;
@property (nonatomic, getter=sleeptime, setter=setSleeptime:) double sleeptime;
#endif

- (id) init;
- (id) initWithCpuUsage: (double) cpuUsage uptime: (double) uptime sleeptime: (double) sleeptime;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) cpuUsage;
- (void) setCpuUsage: (double) cpuUsage;
#endif
- (BOOL) cpuUsageIsSet;

#if !__has_feature(objc_arc)
- (double) uptime;
- (void) setUptime: (double) uptime;
#endif
- (BOOL) uptimeIsSet;

#if !__has_feature(objc_arc)
- (double) sleeptime;
- (void) setSleeptime: (double) sleeptime;
#endif
- (BOOL) sleeptimeIsSet;

@end

@interface CallInfo : NSObject <TBase, NSCoding> {
  double __incomingCallTime;
  double __outgoingCallTime;
  double __nonCallTime;
  NSString * __callStatus;

  BOOL __incomingCallTime_isset;
  BOOL __outgoingCallTime_isset;
  BOOL __nonCallTime_isset;
  BOOL __callStatus_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=incomingCallTime, setter=setIncomingCallTime:) double incomingCallTime;
@property (nonatomic, getter=outgoingCallTime, setter=setOutgoingCallTime:) double outgoingCallTime;
@property (nonatomic, getter=nonCallTime, setter=setNonCallTime:) double nonCallTime;
@property (nonatomic, retain, getter=callStatus, setter=setCallStatus:) NSString * callStatus;
#endif

- (id) init;
- (id) initWithIncomingCallTime: (double) incomingCallTime outgoingCallTime: (double) outgoingCallTime nonCallTime: (double) nonCallTime callStatus: (NSString *) callStatus;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) incomingCallTime;
- (void) setIncomingCallTime: (double) incomingCallTime;
#endif
- (BOOL) incomingCallTimeIsSet;

#if !__has_feature(objc_arc)
- (double) outgoingCallTime;
- (void) setOutgoingCallTime: (double) outgoingCallTime;
#endif
- (BOOL) outgoingCallTimeIsSet;

#if !__has_feature(objc_arc)
- (double) nonCallTime;
- (void) setNonCallTime: (double) nonCallTime;
#endif
- (BOOL) nonCallTimeIsSet;

#if !__has_feature(objc_arc)
- (NSString *) callStatus;
- (void) setCallStatus: (NSString *) callStatus;
#endif
- (BOOL) callStatusIsSet;

@end

@interface Feature : NSObject <TBase, NSCoding> {
  NSString * __key;
  NSString * __value;

  BOOL __key_isset;
  BOOL __value_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=key, setter=setKey:) NSString * key;
@property (nonatomic, retain, getter=value, setter=setValue:) NSString * value;
#endif

- (id) init;
- (id) initWithKey: (NSString *) key value: (NSString *) value;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) key;
- (void) setKey: (NSString *) key;
#endif
- (BOOL) keyIsSet;

#if !__has_feature(objc_arc)
- (NSString *) value;
- (void) setValue: (NSString *) value;
#endif
- (BOOL) valueIsSet;

@end

@interface Settings : NSObject <TBase, NSCoding> {
  BOOL __bluetoothEnabled;
  BOOL __locationEnabled;

  BOOL __bluetoothEnabled_isset;
  BOOL __locationEnabled_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=bluetoothEnabled, setter=setBluetoothEnabled:) BOOL bluetoothEnabled;
@property (nonatomic, getter=locationEnabled, setter=setLocationEnabled:) BOOL locationEnabled;
#endif

- (id) init;
- (id) initWithBluetoothEnabled: (BOOL) bluetoothEnabled locationEnabled: (BOOL) locationEnabled;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (BOOL) bluetoothEnabled;
- (void) setBluetoothEnabled: (BOOL) bluetoothEnabled;
#endif
- (BOOL) bluetoothEnabledIsSet;

#if !__has_feature(objc_arc)
- (BOOL) locationEnabled;
- (void) setLocationEnabled: (BOOL) locationEnabled;
#endif
- (BOOL) locationEnabledIsSet;

@end

@interface Sample : NSObject <TBase, NSCoding> {
  NSString * __uuId;
  double __timestamp;
  ProcessInfoList __piList;
  NSString * __batteryState;
  double __batteryLevel;
  int32_t __memoryWired;
  int32_t __memoryActive;
  int32_t __memoryInactive;
  int32_t __memoryFree;
  int32_t __memoryUser;
  NSString * __triggeredBy;
  NSString * __networkStatus;
  double __distanceTraveled;
  int32_t __screenBrightness;
  NetworkDetails * __networkDetails;
  BatteryDetails * __batteryDetails;
  CpuStatus * __cpuStatus;
  NSMutableArray * __locationProviders;
  CallInfo * __callInfo;
  int32_t __screenOn;
  NSString * __timeZone;
  int32_t __unknownSources;
  int32_t __developerMode;
  NSMutableArray * __extra;
  Settings * __settings;

  BOOL __uuId_isset;
  BOOL __timestamp_isset;
  BOOL __piList_isset;
  BOOL __batteryState_isset;
  BOOL __batteryLevel_isset;
  BOOL __memoryWired_isset;
  BOOL __memoryActive_isset;
  BOOL __memoryInactive_isset;
  BOOL __memoryFree_isset;
  BOOL __memoryUser_isset;
  BOOL __triggeredBy_isset;
  BOOL __networkStatus_isset;
  BOOL __distanceTraveled_isset;
  BOOL __screenBrightness_isset;
  BOOL __networkDetails_isset;
  BOOL __batteryDetails_isset;
  BOOL __cpuStatus_isset;
  BOOL __locationProviders_isset;
  BOOL __callInfo_isset;
  BOOL __screenOn_isset;
  BOOL __timeZone_isset;
  BOOL __unknownSources_isset;
  BOOL __developerMode_isset;
  BOOL __extra_isset;
  BOOL __settings_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=uuId, setter=setUuId:) NSString * uuId;
@property (nonatomic, getter=timestamp, setter=setTimestamp:) double timestamp;
@property (nonatomic, retain, getter=piList, setter=setPiList:) ProcessInfoList piList;
@property (nonatomic, retain, getter=batteryState, setter=setBatteryState:) NSString * batteryState;
@property (nonatomic, getter=batteryLevel, setter=setBatteryLevel:) double batteryLevel;
@property (nonatomic, getter=memoryWired, setter=setMemoryWired:) int32_t memoryWired;
@property (nonatomic, getter=memoryActive, setter=setMemoryActive:) int32_t memoryActive;
@property (nonatomic, getter=memoryInactive, setter=setMemoryInactive:) int32_t memoryInactive;
@property (nonatomic, getter=memoryFree, setter=setMemoryFree:) int32_t memoryFree;
@property (nonatomic, getter=memoryUser, setter=setMemoryUser:) int32_t memoryUser;
@property (nonatomic, retain, getter=triggeredBy, setter=setTriggeredBy:) NSString * triggeredBy;
@property (nonatomic, retain, getter=networkStatus, setter=setNetworkStatus:) NSString * networkStatus;
@property (nonatomic, getter=distanceTraveled, setter=setDistanceTraveled:) double distanceTraveled;
@property (nonatomic, getter=screenBrightness, setter=setScreenBrightness:) int32_t screenBrightness;
@property (nonatomic, retain, getter=networkDetails, setter=setNetworkDetails:) NetworkDetails * networkDetails;
@property (nonatomic, retain, getter=batteryDetails, setter=setBatteryDetails:) BatteryDetails * batteryDetails;
@property (nonatomic, retain, getter=cpuStatus, setter=setCpuStatus:) CpuStatus * cpuStatus;
@property (nonatomic, retain, getter=locationProviders, setter=setLocationProviders:) NSMutableArray * locationProviders;
@property (nonatomic, retain, getter=callInfo, setter=setCallInfo:) CallInfo * callInfo;
@property (nonatomic, getter=screenOn, setter=setScreenOn:) int32_t screenOn;
@property (nonatomic, retain, getter=timeZone, setter=setTimeZone:) NSString * timeZone;
@property (nonatomic, getter=unknownSources, setter=setUnknownSources:) int32_t unknownSources;
@property (nonatomic, getter=developerMode, setter=setDeveloperMode:) int32_t developerMode;
@property (nonatomic, retain, getter=extra, setter=setExtra:) NSMutableArray * extra;
@property (nonatomic, retain, getter=settings, setter=setSettings:) Settings * settings;
#endif

- (id) init;
- (id) initWithUuId: (NSString *) uuId timestamp: (double) timestamp piList: (ProcessInfoList) piList batteryState: (NSString *) batteryState batteryLevel: (double) batteryLevel memoryWired: (int32_t) memoryWired memoryActive: (int32_t) memoryActive memoryInactive: (int32_t) memoryInactive memoryFree: (int32_t) memoryFree memoryUser: (int32_t) memoryUser triggeredBy: (NSString *) triggeredBy networkStatus: (NSString *) networkStatus distanceTraveled: (double) distanceTraveled screenBrightness: (int32_t) screenBrightness networkDetails: (NetworkDetails *) networkDetails batteryDetails: (BatteryDetails *) batteryDetails cpuStatus: (CpuStatus *) cpuStatus locationProviders: (NSMutableArray *) locationProviders callInfo: (CallInfo *) callInfo screenOn: (int32_t) screenOn timeZone: (NSString *) timeZone unknownSources: (int32_t) unknownSources developerMode: (int32_t) developerMode extra: (NSMutableArray *) extra settings: (Settings *) settings;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) uuId;
- (void) setUuId: (NSString *) uuId;
#endif
- (BOOL) uuIdIsSet;

#if !__has_feature(objc_arc)
- (double) timestamp;
- (void) setTimestamp: (double) timestamp;
#endif
- (BOOL) timestampIsSet;

#if !__has_feature(objc_arc)
- (ProcessInfoList) piList;
- (void) setPiList: (ProcessInfoList) piList;
#endif
- (BOOL) piListIsSet;

#if !__has_feature(objc_arc)
- (NSString *) batteryState;
- (void) setBatteryState: (NSString *) batteryState;
#endif
- (BOOL) batteryStateIsSet;

#if !__has_feature(objc_arc)
- (double) batteryLevel;
- (void) setBatteryLevel: (double) batteryLevel;
#endif
- (BOOL) batteryLevelIsSet;

#if !__has_feature(objc_arc)
- (int32_t) memoryWired;
- (void) setMemoryWired: (int32_t) memoryWired;
#endif
- (BOOL) memoryWiredIsSet;

#if !__has_feature(objc_arc)
- (int32_t) memoryActive;
- (void) setMemoryActive: (int32_t) memoryActive;
#endif
- (BOOL) memoryActiveIsSet;

#if !__has_feature(objc_arc)
- (int32_t) memoryInactive;
- (void) setMemoryInactive: (int32_t) memoryInactive;
#endif
- (BOOL) memoryInactiveIsSet;

#if !__has_feature(objc_arc)
- (int32_t) memoryFree;
- (void) setMemoryFree: (int32_t) memoryFree;
#endif
- (BOOL) memoryFreeIsSet;

#if !__has_feature(objc_arc)
- (int32_t) memoryUser;
- (void) setMemoryUser: (int32_t) memoryUser;
#endif
- (BOOL) memoryUserIsSet;

#if !__has_feature(objc_arc)
- (NSString *) triggeredBy;
- (void) setTriggeredBy: (NSString *) triggeredBy;
#endif
- (BOOL) triggeredByIsSet;

#if !__has_feature(objc_arc)
- (NSString *) networkStatus;
- (void) setNetworkStatus: (NSString *) networkStatus;
#endif
- (BOOL) networkStatusIsSet;

#if !__has_feature(objc_arc)
- (double) distanceTraveled;
- (void) setDistanceTraveled: (double) distanceTraveled;
#endif
- (BOOL) distanceTraveledIsSet;

#if !__has_feature(objc_arc)
- (int32_t) screenBrightness;
- (void) setScreenBrightness: (int32_t) screenBrightness;
#endif
- (BOOL) screenBrightnessIsSet;

#if !__has_feature(objc_arc)
- (NetworkDetails *) networkDetails;
- (void) setNetworkDetails: (NetworkDetails *) networkDetails;
#endif
- (BOOL) networkDetailsIsSet;

#if !__has_feature(objc_arc)
- (BatteryDetails *) batteryDetails;
- (void) setBatteryDetails: (BatteryDetails *) batteryDetails;
#endif
- (BOOL) batteryDetailsIsSet;

#if !__has_feature(objc_arc)
- (CpuStatus *) cpuStatus;
- (void) setCpuStatus: (CpuStatus *) cpuStatus;
#endif
- (BOOL) cpuStatusIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) locationProviders;
- (void) setLocationProviders: (NSMutableArray *) locationProviders;
#endif
- (BOOL) locationProvidersIsSet;

#if !__has_feature(objc_arc)
- (CallInfo *) callInfo;
- (void) setCallInfo: (CallInfo *) callInfo;
#endif
- (BOOL) callInfoIsSet;

#if !__has_feature(objc_arc)
- (int32_t) screenOn;
- (void) setScreenOn: (int32_t) screenOn;
#endif
- (BOOL) screenOnIsSet;

#if !__has_feature(objc_arc)
- (NSString *) timeZone;
- (void) setTimeZone: (NSString *) timeZone;
#endif
- (BOOL) timeZoneIsSet;

#if !__has_feature(objc_arc)
- (int32_t) unknownSources;
- (void) setUnknownSources: (int32_t) unknownSources;
#endif
- (BOOL) unknownSourcesIsSet;

#if !__has_feature(objc_arc)
- (int32_t) developerMode;
- (void) setDeveloperMode: (int32_t) developerMode;
#endif
- (BOOL) developerModeIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) extra;
- (void) setExtra: (NSMutableArray *) extra;
#endif
- (BOOL) extraIsSet;

#if !__has_feature(objc_arc)
- (Settings *) settings;
- (void) setSettings: (Settings *) settings;
#endif
- (BOOL) settingsIsSet;

@end

@interface DetailScreenReport : NSObject <TBase, NSCoding> {
  double __score;
  NSMutableArray * __xVals;
  NSMutableArray * __yVals;
  double __expectedValue;
  double __error;
  double __errorWithout;
  double __samples;
  double __samplesWithout;

  BOOL __score_isset;
  BOOL __xVals_isset;
  BOOL __yVals_isset;
  BOOL __expectedValue_isset;
  BOOL __error_isset;
  BOOL __errorWithout_isset;
  BOOL __samples_isset;
  BOOL __samplesWithout_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=score, setter=setScore:) double score;
@property (nonatomic, retain, getter=xVals, setter=setXVals:) NSMutableArray * xVals;
@property (nonatomic, retain, getter=yVals, setter=setYVals:) NSMutableArray * yVals;
@property (nonatomic, getter=expectedValue, setter=setExpectedValue:) double expectedValue;
@property (nonatomic, getter=error, setter=setError:) double error;
@property (nonatomic, getter=errorWithout, setter=setErrorWithout:) double errorWithout;
@property (nonatomic, getter=samples, setter=setSamples:) double samples;
@property (nonatomic, getter=samplesWithout, setter=setSamplesWithout:) double samplesWithout;
#endif

- (id) init;
- (id) initWithScore: (double) score xVals: (NSMutableArray *) xVals yVals: (NSMutableArray *) yVals expectedValue: (double) expectedValue error: (double) error errorWithout: (double) errorWithout samples: (double) samples samplesWithout: (double) samplesWithout;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) score;
- (void) setScore: (double) score;
#endif
- (BOOL) scoreIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) xVals;
- (void) setXVals: (NSMutableArray *) xVals;
#endif
- (BOOL) xValsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) yVals;
- (void) setYVals: (NSMutableArray *) yVals;
#endif
- (BOOL) yValsIsSet;

#if !__has_feature(objc_arc)
- (double) expectedValue;
- (void) setExpectedValue: (double) expectedValue;
#endif
- (BOOL) expectedValueIsSet;

#if !__has_feature(objc_arc)
- (double) error;
- (void) setError: (double) error;
#endif
- (BOOL) errorIsSet;

#if !__has_feature(objc_arc)
- (double) errorWithout;
- (void) setErrorWithout: (double) errorWithout;
#endif
- (BOOL) errorWithoutIsSet;

#if !__has_feature(objc_arc)
- (double) samples;
- (void) setSamples: (double) samples;
#endif
- (BOOL) samplesIsSet;

#if !__has_feature(objc_arc)
- (double) samplesWithout;
- (void) setSamplesWithout: (double) samplesWithout;
#endif
- (BOOL) samplesWithoutIsSet;

@end

@interface Reports : NSObject <TBase, NSCoding> {
  double __jScore;
  DetailScreenReport * __os;
  DetailScreenReport * __osWithout;
  DetailScreenReport * __model;
  DetailScreenReport * __modelWithout;
  DetailScreenReport * __similarApps;
  DetailScreenReport * __similarAppsWithout;
  double __changeSinceLastWeek;
  double __changeSinceLastWeekPercentage;
  DetailScreenReport * __jScoreWith;
  DetailScreenReport * __jScoreWithout;

  BOOL __jScore_isset;
  BOOL __os_isset;
  BOOL __osWithout_isset;
  BOOL __model_isset;
  BOOL __modelWithout_isset;
  BOOL __similarApps_isset;
  BOOL __similarAppsWithout_isset;
  BOOL __changeSinceLastWeek_isset;
  BOOL __changeSinceLastWeekPercentage_isset;
  BOOL __jScoreWith_isset;
  BOOL __jScoreWithout_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=jScore, setter=setJScore:) double jScore;
@property (nonatomic, retain, getter=os, setter=setOs:) DetailScreenReport * os;
@property (nonatomic, retain, getter=osWithout, setter=setOsWithout:) DetailScreenReport * osWithout;
@property (nonatomic, retain, getter=model, setter=setModel:) DetailScreenReport * model;
@property (nonatomic, retain, getter=modelWithout, setter=setModelWithout:) DetailScreenReport * modelWithout;
@property (nonatomic, retain, getter=similarApps, setter=setSimilarApps:) DetailScreenReport * similarApps;
@property (nonatomic, retain, getter=similarAppsWithout, setter=setSimilarAppsWithout:) DetailScreenReport * similarAppsWithout;
@property (nonatomic, getter=changeSinceLastWeek, setter=setChangeSinceLastWeek:) double changeSinceLastWeek;
@property (nonatomic, getter=changeSinceLastWeekPercentage, setter=setChangeSinceLastWeekPercentage:) double changeSinceLastWeekPercentage;
@property (nonatomic, retain, getter=jScoreWith, setter=setJScoreWith:) DetailScreenReport * jScoreWith;
@property (nonatomic, retain, getter=jScoreWithout, setter=setJScoreWithout:) DetailScreenReport * jScoreWithout;
#endif

- (id) init;
- (id) initWithJScore: (double) jScore os: (DetailScreenReport *) os osWithout: (DetailScreenReport *) osWithout model: (DetailScreenReport *) model modelWithout: (DetailScreenReport *) modelWithout similarApps: (DetailScreenReport *) similarApps similarAppsWithout: (DetailScreenReport *) similarAppsWithout changeSinceLastWeek: (double) changeSinceLastWeek changeSinceLastWeekPercentage: (double) changeSinceLastWeekPercentage jScoreWith: (DetailScreenReport *) jScoreWith jScoreWithout: (DetailScreenReport *) jScoreWithout;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (double) jScore;
- (void) setJScore: (double) jScore;
#endif
- (BOOL) jScoreIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) os;
- (void) setOs: (DetailScreenReport *) os;
#endif
- (BOOL) osIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) osWithout;
- (void) setOsWithout: (DetailScreenReport *) osWithout;
#endif
- (BOOL) osWithoutIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) model;
- (void) setModel: (DetailScreenReport *) model;
#endif
- (BOOL) modelIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) modelWithout;
- (void) setModelWithout: (DetailScreenReport *) modelWithout;
#endif
- (BOOL) modelWithoutIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) similarApps;
- (void) setSimilarApps: (DetailScreenReport *) similarApps;
#endif
- (BOOL) similarAppsIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) similarAppsWithout;
- (void) setSimilarAppsWithout: (DetailScreenReport *) similarAppsWithout;
#endif
- (BOOL) similarAppsWithoutIsSet;

#if !__has_feature(objc_arc)
- (double) changeSinceLastWeek;
- (void) setChangeSinceLastWeek: (double) changeSinceLastWeek;
#endif
- (BOOL) changeSinceLastWeekIsSet;

#if !__has_feature(objc_arc)
- (double) changeSinceLastWeekPercentage;
- (void) setChangeSinceLastWeekPercentage: (double) changeSinceLastWeekPercentage;
#endif
- (BOOL) changeSinceLastWeekPercentageIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) jScoreWith;
- (void) setJScoreWith: (DetailScreenReport *) jScoreWith;
#endif
- (BOOL) jScoreWithIsSet;

#if !__has_feature(objc_arc)
- (DetailScreenReport *) jScoreWithout;
- (void) setJScoreWithout: (DetailScreenReport *) jScoreWithout;
#endif
- (BOOL) jScoreWithoutIsSet;

@end

@interface HogsBugs : NSObject <TBase, NSCoding> {
  NSString * __appName;
  double __wDistance;
  NSMutableArray * __xVals;
  NSMutableArray * __yVals;
  NSMutableArray * __xValsWithout;
  NSMutableArray * __yValsWithout;
  double __expectedValue;
  double __expectedValueWithout;
  double __error;
  double __errorWithout;
  double __samples;
  double __samplesWithout;
  NSString * __appLabel;
  NSString * __appPriority;

  BOOL __appName_isset;
  BOOL __wDistance_isset;
  BOOL __xVals_isset;
  BOOL __yVals_isset;
  BOOL __xValsWithout_isset;
  BOOL __yValsWithout_isset;
  BOOL __expectedValue_isset;
  BOOL __expectedValueWithout_isset;
  BOOL __error_isset;
  BOOL __errorWithout_isset;
  BOOL __samples_isset;
  BOOL __samplesWithout_isset;
  BOOL __appLabel_isset;
  BOOL __appPriority_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=appName, setter=setAppName:) NSString * appName;
@property (nonatomic, getter=wDistance, setter=setWDistance:) double wDistance;
@property (nonatomic, retain, getter=xVals, setter=setXVals:) NSMutableArray * xVals;
@property (nonatomic, retain, getter=yVals, setter=setYVals:) NSMutableArray * yVals;
@property (nonatomic, retain, getter=xValsWithout, setter=setXValsWithout:) NSMutableArray * xValsWithout;
@property (nonatomic, retain, getter=yValsWithout, setter=setYValsWithout:) NSMutableArray * yValsWithout;
@property (nonatomic, getter=expectedValue, setter=setExpectedValue:) double expectedValue;
@property (nonatomic, getter=expectedValueWithout, setter=setExpectedValueWithout:) double expectedValueWithout;
@property (nonatomic, getter=error, setter=setError:) double error;
@property (nonatomic, getter=errorWithout, setter=setErrorWithout:) double errorWithout;
@property (nonatomic, getter=samples, setter=setSamples:) double samples;
@property (nonatomic, getter=samplesWithout, setter=setSamplesWithout:) double samplesWithout;
@property (nonatomic, retain, getter=appLabel, setter=setAppLabel:) NSString * appLabel;
@property (nonatomic, retain, getter=appPriority, setter=setAppPriority:) NSString * appPriority;
#endif

- (id) init;
- (id) initWithAppName: (NSString *) appName wDistance: (double) wDistance xVals: (NSMutableArray *) xVals yVals: (NSMutableArray *) yVals xValsWithout: (NSMutableArray *) xValsWithout yValsWithout: (NSMutableArray *) yValsWithout expectedValue: (double) expectedValue expectedValueWithout: (double) expectedValueWithout error: (double) error errorWithout: (double) errorWithout samples: (double) samples samplesWithout: (double) samplesWithout appLabel: (NSString *) appLabel appPriority: (NSString *) appPriority;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) appName;
- (void) setAppName: (NSString *) appName;
#endif
- (BOOL) appNameIsSet;

#if !__has_feature(objc_arc)
- (double) wDistance;
- (void) setWDistance: (double) wDistance;
#endif
- (BOOL) wDistanceIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) xVals;
- (void) setXVals: (NSMutableArray *) xVals;
#endif
- (BOOL) xValsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) yVals;
- (void) setYVals: (NSMutableArray *) yVals;
#endif
- (BOOL) yValsIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) xValsWithout;
- (void) setXValsWithout: (NSMutableArray *) xValsWithout;
#endif
- (BOOL) xValsWithoutIsSet;

#if !__has_feature(objc_arc)
- (NSMutableArray *) yValsWithout;
- (void) setYValsWithout: (NSMutableArray *) yValsWithout;
#endif
- (BOOL) yValsWithoutIsSet;

#if !__has_feature(objc_arc)
- (double) expectedValue;
- (void) setExpectedValue: (double) expectedValue;
#endif
- (BOOL) expectedValueIsSet;

#if !__has_feature(objc_arc)
- (double) expectedValueWithout;
- (void) setExpectedValueWithout: (double) expectedValueWithout;
#endif
- (BOOL) expectedValueWithoutIsSet;

#if !__has_feature(objc_arc)
- (double) error;
- (void) setError: (double) error;
#endif
- (BOOL) errorIsSet;

#if !__has_feature(objc_arc)
- (double) errorWithout;
- (void) setErrorWithout: (double) errorWithout;
#endif
- (BOOL) errorWithoutIsSet;

#if !__has_feature(objc_arc)
- (double) samples;
- (void) setSamples: (double) samples;
#endif
- (BOOL) samplesIsSet;

#if !__has_feature(objc_arc)
- (double) samplesWithout;
- (void) setSamplesWithout: (double) samplesWithout;
#endif
- (BOOL) samplesWithoutIsSet;

#if !__has_feature(objc_arc)
- (NSString *) appLabel;
- (void) setAppLabel: (NSString *) appLabel;
#endif
- (BOOL) appLabelIsSet;

#if !__has_feature(objc_arc)
- (NSString *) appPriority;
- (void) setAppPriority: (NSString *) appPriority;
#endif
- (BOOL) appPriorityIsSet;

@end

@interface HogBugReport : NSObject <TBase, NSCoding> {
  NSString * __uuId;
  HogsBugsList __hbList;

  BOOL __uuId_isset;
  BOOL __hbList_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=uuId, setter=setUuId:) NSString * uuId;
@property (nonatomic, retain, getter=hbList, setter=setHbList:) HogsBugsList hbList;
#endif

- (id) init;
- (id) initWithUuId: (NSString *) uuId hbList: (HogsBugsList) hbList;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (NSString *) uuId;
- (void) setUuId: (NSString *) uuId;
#endif
- (BOOL) uuIdIsSet;

#if !__has_feature(objc_arc)
- (HogsBugsList) hbList;
- (void) setHbList: (HogsBugsList) hbList;
#endif
- (BOOL) hbListIsSet;

@end

@protocol CaratService <NSObject>
- (void) registerMe: (Registration *) registration;  // throws TException
- (BOOL) uploadSample: (Sample *) sample;  // throws TException
- (Reports *) getReports: (NSString *) uuId features: (FeatureList) features;  // throws TException
- (HogBugReport *) getHogOrBugReport: (NSString *) uuId features: (FeatureList) features;  // throws TException
- (HogBugReport *) getQuickHogsAndMaybeRegister: (Registration *) registration processList: (NSMutableArray *) processList;  // throws TException
@end

@interface CaratServiceClient : TBaseClient <CaratService> - (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface CaratServiceProcessor : NSObject <TProcessor> {
  id <CaratService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithCaratService: (id <CaratService>) service;
- (id<CaratService>) service;
@end

@interface CaratProtocolConstants : NSObject {
}
@end
